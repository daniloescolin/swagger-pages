---
openapi: 3.0.0
info:
  description: |
    This is the new endpoints for soul-project
  version: "0.0.1"
  title: Soul Project
  termsOfService: 'http://swagger.io/terms/'
  contact:
    email: danilo.escolin@zubale.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/daniloandres.escolinrodriguez/zoul/1.0.0
  - url: 'https://petstore.swagger.io/v2'
tags:
  - name: Validation
    description: Operations about validations
    externalDocs:
      description: Find out more
      url: 'http://swagger.io'
  - name: Validation Detail
    description: Operations about validation details
  - name: Bucket
    description: Operations about buckets
    externalDocs:
      description: Operations about buckets
      url: 'http://swagger.io'
  - name: Bucket Validation
    description: Operations about bucket validations
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /validation:
    post:
      tags:
        - Validation
      summary: Add a new validation
      description: Add a new validation.
      operationId: addValidation
      responses:
        '200':
          description: successful operation
        '405':
          description: Invalid input
      requestBody:
        $ref: '#/components/requestBodies/Validation'
    put:
      tags:
        - Validation
      summary: Update an existing validation
      operationId: updateValidation
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Validation not found
        '405':
          description: Validation exception
      requestBody:
        $ref: '#/components/requestBodies/Validation'
  '/validation/{validationId}':
    get:
      tags:
        - Validation
      summary: Find validation by ID
      description: >-
        For valid response try integer IDs with value >= 1 and <= 10.\ \ Other
        values will generated exceptions
      operationId: getValidationById
      parameters:
        - name: validationId
          in: path
          description: ID of validation that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 10
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'
            application/xml:
              schema:
                $ref: '#/components/schemas/Validation'
        '400':
          description: Invalid ID supplied
        '404':
          description: Validation not found
    delete:
      tags:
        - Validation
      summary: Delete validation by ID
      description: >-
        For valid response try integer IDs with positive integer value.\ \
        Negative or non-integer values will generate API errors
      operationId: deleteValidation
      parameters:
        - name: validationId
          in: path
          description: ID of the order that needs to be deleted
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Validation not found
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
components:
  schemas:
    Validation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        instructions:
          type: string
        notes:
          type: string
        process_type:
          type: string
    ValidationDetail:
      type: object
      properties:
        id:
          type: integer
          format: int64
        fact_type:
          type: string
        value:
          type: string
        keyword_id:
          type: integer
          format: int64
        display_type:
          type: string
        source:
          type: string
    Bucket:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        status:
          type: string
        group:
          type: string
    BucketValidation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        validation_id:
          type: integer
          format: int64
        bucket_id:
          type: integer
          format: int64
        position:
          type: integer
          format: int64
  requestBodies:
    Validation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Validation'
